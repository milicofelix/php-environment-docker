version: "3.9"

services:
  web:
    container_name: setup-php-spedtax
    restart: always
    build: 
      context: .
      dockerfile: ./Dockerfile
    networks:
      - net_spedtax
    volumes:
      - ./applications:/var/www
      - ./docker/nginx/sites:/etc/nginx/sites-available
    ports:
      - "80:80" #http
      - "443:443" #https
      - "8080:8080"
      - "8081:8081"
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15.5-alpine
    container_name: setup-postgres-spedtax
    restart: always
    networks:
      - net_spedtax
    volumes:
      - ./docker/postgres/.postgresql_data:/var/lib/postgresql/data
      - ./docker/postgres/.backups:/var/lib/postgresql/backups
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-root}
      POSTGRES_DB: spedtax
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:latest
    container_name: setup-redis-spedtax
    restart: always
    command: ["sh", "-c", "redis-server /usr/local/etc/redis/redis.conf & sleep 10 && /docker-entrypoint-initdb.d/init.sh"]
    volumes:
      - ./docker/redis/node1/cluster-config.conf:/usr/local/etc/redis/redis.conf
      - ./init.sh:/docker-entrypoint-initdb.d/init.sh
    networks:
      - net_spedtax
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  cluster-2:
    image: redis:latest
    container_name: setup-cluster-2-spedtax
    restart: always
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    volumes:
      - ./docker/redis/node2/cluster-config.conf:/usr/local/etc/redis/redis.conf
    networks:
      - net_spedtax
    ports:
      - "6380:6380"
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6380", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  cluster-3:
    image: redis:latest
    container_name: setup-cluster-3-spedtax
    restart: always
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    volumes:
      - ./docker/redis/node3/cluster-config.conf:/usr/local/etc/redis/redis.conf
    networks:
      - net_spedtax
    ports:
      - "6381:6381"
    depends_on:
      - cluster-2
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6381", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  cluster-4:
    image: redis:latest
    container_name: setup-cluster-4-spedtax
    restart: always
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    volumes:
      - ./docker/redis/node4/cluster-config.conf:/usr/local/etc/redis/redis.conf
    networks:
      - net_spedtax
    ports:
      - "6382:6382"
    depends_on:
      - cluster-3
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6382", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  cluster-5:
    image: redis:latest
    container_name: setup-cluster-5-spedtax
    restart: always
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    volumes:
      - ./docker/redis/node5/cluster-config.conf:/usr/local/etc/redis/redis.conf
    networks:
      - net_spedtax
    ports:
      - "6383:6383"
    depends_on:
      - cluster-4
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6383", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  cluster-6:
    image: redis:latest
    container_name: setup-cluster-6-spedtax
    restart: always
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    volumes:
      - ./docker/redis/node6/cluster-config.conf:/usr/local/etc/redis/redis.conf
    networks:
      - net_spedtax
    ports:
      - "6384:6384"
    depends_on:
      - cluster-5
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6384", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  minio:
    image: minio/minio
    container_name: setup-minio-spedtax
    restart: always
    networks:
      - net_spedtax
    ports:
      - "9000:9000"
      - "9001:9001"
      - "34477:34477"
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-minio}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-minio123}
    volumes:
      - ./docker/minio/data:/data
      - ./docker/minio/config:/root/.minio
    command: server --address ":9000" --console-address ":9001" /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  net_spedtax:
    driver: bridge
